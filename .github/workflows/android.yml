name: Android CI

on:
  pull_request:
    branches:
      - '*'

jobs: 

  # check-commit-message:
  #   name: Check Commit Message
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get PR Commits
  #       id: 'get-pr-commits'
  #       uses: tim-actions/get-pr-commits@master
  #       with:
  #         token: ${{ secrets.GIT_TOKEN }}
  #     - name: Check Subject Line Length
  #       uses: tim-actions/commit-message-checker-with-regex@v0.3.1
  #       with:
  #         commits: ${{ steps.get-pr-commits.outputs.commits }}
  #         pattern: '^.{0,50}(\n.*)*$'
  #         error: 'Subject too long (max 50)'
  #     - name: Check Body Line Length
  #       if: ${{ success() || failure() }}
  #       uses: tim-actions/commit-message-checker-with-regex@v0.3.1
  #       with:
  #         commits: ${{ steps.get-pr-commits.outputs.commits }}
  #         pattern: '^.+(\n.{0,72})*$'
  #         error: 'Body line too long (max 72)'
  
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Access API_KEY
      env:
        API_KEY: ${{secrets.API_KEY}}
      run: echo API_KEY=\"$API_KEY\" > ./local.properties

    - name: Access Constants
      env:
        API_KEY: ${{secrets.API_KEY}}
      run: echo API_KEY=\"$API_KEY\" > ./app/src/main/java/com/example/githubaction/Constants
      

    - name: Cache Gradle
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Unit tests
      run: ./gradlew testDebugUnitTest
      
    - name: Android Test Report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }}
    
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }}
      with:
        files: build/test-results/**/*.xml

    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: app/build/outputs/apk/debug
    
    - name: Slack - Send Msg
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: workflow,job,commit,repo,author,took,ref
        author_name: ji
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL }}
      if: always()
